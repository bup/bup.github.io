#!/usr/bin/env python3

from os.path import basename
import re, sys


def render_cmd(subcmd, page_dir, indent):
    if subcmd:
        subcmd_and_sec = subcmd.split()[0]
        cmd_name = 'bup ' + re.sub(r'^([^.]+)\.[0-9]+', r'\1', subcmd)
        page_name = 'bup-' + subcmd_and_sec
    else:
        page_name = cmd_name = 'bup'
    print('%s<li><a href="%s/%s.html">%s</a></li>'
                  % ((' ' * indent), page_dir, page_name, cmd_name))

def render_sections(sections, other, requested_cmds, page_dir, indent=0):
    rendered = set()
    for section in sections:
        sec_name, cmds = section
        print('%s<h3>%s</h3>' % ((' ' * indent), sec_name))
        print('%s<ul>' % (' ' * indent))
        for cmd in cmds:
            cmd_name = cmd and cmd.split()[0] or None
            if cmd_name not in requested_cmds:
                continue
            render_cmd(cmd, page_dir, indent + 2)
            rendered.add(cmd_name)
        print('%s</ul>' % (' ' * indent))
    remaining_cmds = requested_cmds - rendered
    if remaining_cmds:
        print('%s<h3>%s</h3>' % ((' ' * indent), other))
        print('%s<ul>' % (' ' * indent))
        for cmd in sorted(remaining_cmds):
            render_cmd(cmd, page_dir, indent + 2)
        print('%s</ul>' % (' ' * indent))

def cmd_from_html_path(x):
    assert(x.endswith('.html'))
    base = basename(x)
    if base == 'bup.1.html':
        return None
    assert(base.startswith('bup-'))
    return base[4:-5] or None


# Usage: create-man-index DIR_CONTAINING_HTML_PAGES HTML_PAGES_TO_INCLUDE...
# e.g. create-man-index man $(git ls-files 'man/*.html')

version = sys.argv[1]
page_dir = sys.argv[2]
pages = sys.argv[3:]

print("""<!doctype html>'
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
    <title>bup man pages</title>
    <link rel="stylesheet" href="stylesheets/styles.css">
    <link rel="stylesheet" href="stylesheets/pygment_trac.css">
    <script src="javascripts/jquery-1.7.1.min.js"></script>
    <script src="javascripts/respond.js"></script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <!--[if lt IE 8]>
    <link rel="stylesheet" href="stylesheets/ie.css">
    <![endif]-->
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
  </head>
  <body>
      <div id="header">
        <nav>
          <li class="fork"><a href="https://github.com/bup/bup">SOURCE</a></li>
          <li class="downloads"><a href="https://github.com/bup/bup/zipball/%(version)s">ZIP</a></li>
          <li class="downloads"><a href="https://github.com/bup/bup/tarball/%(version)s">TAR</a></li>
          <li class="title">RELEASE (%(version)s)</li>
        </nav>
      </div><!-- end header -->
    <div class="wrapper">
      <section>
        <div id="title">
          <h1>bup</h1>
          <p>Very efficient backup system based on the git packfile format, providing fast incremental saves and global deduplication (among and within files, including virtual machine images).</p>
          <hr>
          <span class="credits left">Contact us on the <a href="https://groups.google.com/forum/#!forum/bup-list">mailing list</a></span>
          <span class="credits right">Theme by <a href="https://twitter.com/michigangraham">mattgraham</a></span>
        </div>""" % {'version' : version})

known_sections = [['Common operations',
                   [None, # bup(1) -- (no subcommand)
                    'help.1',
                    'init.1',
                    'fsck.1',
                    'tag.1',
                    'version.1']],
                  ['Inspection',
                   ['ls.1',
                    'fuse.1',
                    'web.1',
                    'ftp.1']],
                  ['Save and restore',
                   ['index.1',
                    'on.1 [HOST index]',
                    'save.1',
                    'on.1 [HOST save]',
                    'restore.1']],
                  ['Split and join',
                   ['split.1',
                    'join.1']],
                  ['Importing data',
                   ['import-duplicity.1',
                    'import-rdiff-backup.1',
                    'import-rsnapshot.1']],
                  ['Pruning old data (destructive)',
                   ['rm.1',
                    'gc.1',
                    'prune-older.1']]]

requested_cmds = frozenset((cmd_from_html_path(x) for x in pages))
render_sections(known_sections, 'Others', requested_cmds, page_dir, 8)

print("""
      </section>
    </div>
    <!--[if !IE]><script>fixScale(document);</script><![endif]-->
  </body>
</html>
""")
